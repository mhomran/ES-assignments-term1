/* Main.ino file generated by New Project wizard
 *
 * Created:   Thu Sep 5 2013
 * Processor: ATmega328P
 * Compiler:  Arduino AVR
 */

typedef enum {
  MODE_BLINKING,
  MODE_FADING
} Mode_t;

#define ON_BOARD_LED 13
#define FADING_LED 6


int ReadByte(void) {
  while (Serial.available() == 0);
  return Serial.read();
}

void BlinkLed(uint8_t res) {
  for(uint8_t i = 0; i < res; i++) {
    digitalWrite(ON_BOARD_LED, HIGH);
    delay(200);
    digitalWrite(ON_BOARD_LED, LOW);
    delay(200);
  }
}

void setup()
 { // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(ON_BOARD_LED, OUTPUT);
  pinMode(FADING_LED, OUTPUT);
 }

void loop() { 
  Serial.println("Hello! enter two bytes and an operator (+,-,*,/).");

  uint8_t A, B;
  char op; 
  uint8_t res;

  A = ReadByte();
  B = ReadByte();
  op = ReadByte();
  
  switch(op) {
    case '-':
      res = A > B ? A - B : 0;
      break;
    case '+':
      res = ((uint16_t)A) + ((uint16_t)B) > 255 ? 255 : A + B;
      break;
    case '*':
      res = ((uint16_t)A) * ((uint16_t)B) > 255 ? 255 : A * B;
      break;
    case '/':
      res = B == 0 ? 0 : A / B;
      break;
    default:
      res = 0;
      break;
  }

  Serial.println("Please enter the mode (0(blinking), 1(fading).");
  
  uint8_t mode;
  mode = ReadByte() - '0';

  switch(mode) {
    case MODE_BLINKING:
      analogWrite(FADING_LED, 0);
      BlinkLed(res);
      break;
    case MODE_FADING:
      digitalWrite(ON_BOARD_LED, LOW);
      analogWrite(FADING_LED, res);
    Serial.println(res);
      break;
    default:
      Serial.println("Invalid mode");
      break;
    }
}
